
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftXORleftANDnonassocLESSTHANGREATTHANleftPLUSMINUSleftTIMESDIVIDEnonassocNEWrightPRIVATEPROTECTEDPUBLICABSTRACT AND AND_ASSIGN ARRAYLIST BLOCK_COMMENT BOOLEAN BYTE CHAR COMA CONCA CONCAT DEFAULT DIVIDE DIVIDE_ASSIGN DOSCOMA DOUBLE DOUBLELINKEDLIST EQUAL EQUALS ESPACIO FINAL FLOAT GREATTHAN GREATTHANEQUAL INT INTEGER LCORCHETE LESSTHAN LESSTHANEQUAL LINKEDLIST LIST LLLAVE LONG LPAREN MINUS MINUSMINUS MINUS_ASSIGN MOD MOD_ASSIGN NEQUAL NEW NOT NULL OBJECT OR OR_ASSIGN PLUS PLUSPLUS PLUS_ASSIGN PRIVATE PROTECTED PUBLIC PUNTO PUNTOCOMA QUEUE RCORCHETE RLLAVE RPAREN SHORT STACK STATIC STRING TIMES TIMESTIMES TIMES_ASSIGN XOR XOR_ASSIGNprogram :  declaration\n                | listdeclaration\n                | arraydeclaration\n                | linkedlistdeclaration\n                | doublelinkedlistdeclaration\n                | stackdeclaration\n                | queuedeclaration\n        Type : INT\n            | BOOLEAN\n            | STRING\n            | SHORT\n            | FLOAT\n            | LONG\n            | DOUBLE\n            | CHAR\n            | BYTE\n            | OBJECT\n            | arraydeclaration\n            | empty\n            accessmodif : PUBLIC\n                    | PRIVATE\n                    | PROTECTED\n                    | DEFAULT\n                    | emptyfinalstatvar : FINAL\n                | STATIC\n                | FINAL STATIC\n                | emptydeclaration : accessmodif finalstatvar Type STRING endexpression\n            | accessmodif finalstatvar Type assign\n            listdeclaration : accessmodif finalstatvar LIST GREATTHAN Type LESSTHAN  STRING endexpression\n            | accessmodif finalstatvar LIST GREATTHAN Type LESSTHAN  listassign\n    listassign : STRING EQUALS listexpression endexpressionlistexpression : NEW LIST GREATTHAN Type LESSTHAN LPAREN RPAREN\n        arraydeclaration : accessmodif finalstatvar ARRAYLIST lessthandat Type greatthandat ESPACIO STRING endexpression\n            | accessmodif finalstatvar ARRAYLIST LESSTHAN Type GREATTHAN arrayassign\n            arrayassign : STRING EQUALS arrayexpression endexpressionarrayexpression : NEW ARRAYLIST LESSTHAN Type GREATTHAN LPAREN RPAREN\n        linkedlistdeclaration : accessmodif finalstatvar LINKEDLIST LESSTHAN Type GREATTHAN STRING endexpression\n                            | accessmodif finalstatvar LINKEDLIST LESSTHAN Type GREATTHAN linkedlistassign\n    linkedlistassign : STRING EQUALS linkedlistexpression endexpressionlinkedlistexpression : NEW LINKEDLIST LESSTHAN Type GREATTHAN LPAREN RPAREN\n        doublelinkedlistdeclaration : accessmodif finalstatvar DOUBLELINKEDLIST LESSTHAN Type GREATTHAN STRING endexpression\n                            | accessmodif finalstatvar DOUBLELINKEDLIST LESSTHAN Type GREATTHAN doublelinkedlistassign\n    doublelinkedlistassign : STRING EQUALS doublelinkedlistexpression endexpressiondoublelinkedlistexpression : NEW DOUBLELINKEDLIST LESSTHAN Type GREATTHAN LPAREN RPAREN\n        stackdeclaration : accessmodif finalstatvar STACK LESSTHAN Type GREATTHAN STRING endexpression\n                            | accessmodif finalstatvar STACK LESSTHAN Type GREATTHAN stackassign\n    stackassign : STRING EQUALS stackexpression endexpressionstackexpression : NEW STACK GREATTHAN Type LESSTHAN LPAREN RPAREN\n        queuedeclaration : accessmodif finalstatvar QUEUE GREATTHAN Type LESSTHAN STRING endexpression\n                            | accessmodif finalstatvar QUEUE GREATTHAN Type LESSTHAN queueassign\n    queueassign : STRING EQUALS queueexpression endexpressionqueueexpression : NEW QUEUE GREATTHAN Type LESSTHAN LPAREN RPAREN\n        assign : STRING EQUALS expression endexpressionendexpression : PUNTOCOMAexpression : expression PLUS expression\n           | expression MINUS expression\n           | expression TIMES expression\n           | expression DIVIDE expression\n           | expression MOD expression\n           | PLUSPLUS\n           | MINUSMINUS\n           | expression TIMESTIMES expression\n           | TIMES_ASSIGN expression\n           | MINUS_ASSIGN expression\n           | PLUS_ASSIGN expression\n           | DIVIDE_ASSIGN expression\n           | MOD_ASSIGN expression\n           | LPAREN expression RPAREN\n           | INTEGER\n           | emptygreatthandat : GREATTHAN\n    lessthandat : LESSTHAN\n    empty :'
    
_lr_action_items = {'PUBLIC':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[10,-75,-20,-21,-22,-23,-24,10,-25,-26,-28,-27,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'PRIVATE':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[11,-75,-20,-21,-22,-23,-24,11,-25,-26,-28,-27,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'PROTECTED':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[12,-75,-20,-21,-22,-23,-24,12,-25,-26,-28,-27,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'DEFAULT':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[13,-75,-20,-21,-22,-23,-24,13,-25,-26,-28,-27,13,13,-74,13,13,13,13,13,13,13,13,13,13,]),'FINAL':([0,9,10,11,12,13,14,15,16,17,18,19,38,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,16,-20,-21,-22,-23,-24,-75,-25,-26,-28,16,-24,-27,-75,-75,-74,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,]),'STATIC':([0,9,10,11,12,13,14,15,16,17,18,19,38,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,17,-20,-21,-22,-23,-24,-75,39,-26,-28,17,-24,-27,-75,-75,-74,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,]),'LIST':([0,9,10,11,12,13,14,15,16,17,18,39,125,],[-75,-75,-20,-21,-22,-23,-24,22,-25,-26,-28,-27,138,]),'ARRAYLIST':([0,9,10,11,12,13,14,15,16,17,18,19,38,39,40,43,44,45,46,47,48,49,128,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,23,-25,-26,-28,-75,-24,-27,23,-75,-75,-74,-75,-75,-75,-75,140,-75,-75,-75,-75,-75,-75,]),'LINKEDLIST':([0,9,10,11,12,13,14,15,16,17,18,39,130,],[-75,-75,-20,-21,-22,-23,-24,24,-25,-26,-28,-27,142,]),'DOUBLELINKEDLIST':([0,9,10,11,12,13,14,15,16,17,18,39,132,],[-75,-75,-20,-21,-22,-23,-24,25,-25,-26,-28,-27,144,]),'STACK':([0,9,10,11,12,13,14,15,16,17,18,39,134,],[-75,-75,-20,-21,-22,-23,-24,26,-25,-26,-28,-27,146,]),'QUEUE':([0,9,10,11,12,13,14,15,16,17,18,39,136,],[-75,-75,-20,-21,-22,-23,-24,27,-25,-26,-28,-27,148,]),'INT':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,28,-25,-26,-28,-27,28,28,-74,28,28,28,28,28,28,28,28,28,28,]),'BOOLEAN':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,29,-25,-26,-28,-27,29,29,-74,29,29,29,29,29,29,29,29,29,29,]),'STRING':([0,9,10,11,12,13,14,15,16,17,18,20,21,28,29,30,31,32,33,34,35,36,37,38,39,43,44,45,46,47,48,49,52,71,74,75,76,77,78,94,95,126,139,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,21,-25,-26,-28,41,-10,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-27,21,21,-74,21,21,21,21,-56,92,96,97,99,101,103,114,-36,-35,-37,21,21,21,21,21,21,]),'SHORT':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,30,-25,-26,-28,-27,30,30,-74,30,30,30,30,30,30,30,30,30,30,]),'FLOAT':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,31,-25,-26,-28,-27,31,31,-74,31,31,31,31,31,31,31,31,31,31,]),'LONG':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,32,-25,-26,-28,-27,32,32,-74,32,32,32,32,32,32,32,32,32,32,]),'DOUBLE':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,33,-25,-26,-28,-27,33,33,-74,33,33,33,33,33,33,33,33,33,33,]),'CHAR':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,34,-25,-26,-28,-27,34,34,-74,34,34,34,34,34,34,34,34,34,34,]),'BYTE':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,35,-25,-26,-28,-27,35,35,-74,35,35,35,35,35,35,35,35,35,35,]),'OBJECT':([0,9,10,11,12,13,14,15,16,17,18,39,43,44,45,46,47,48,49,149,150,151,152,153,154,],[-75,-75,-20,-21,-22,-23,-24,36,-25,-26,-28,-27,36,36,-74,36,36,36,36,36,36,36,36,36,36,]),'$end':([1,2,3,4,5,6,7,8,42,50,52,79,93,95,98,100,102,104,112,116,118,120,122,126,137,139,141,143,145,147,],[0,-1,-2,-3,-4,-5,-6,-7,-30,-29,-56,-55,-32,-36,-40,-44,-48,-52,-31,-39,-43,-47,-51,-35,-33,-37,-41,-45,-49,-53,]),'LESSTHAN':([21,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,43,49,52,53,59,95,126,139,140,142,144,149,153,154,155,159,160,],[-10,45,46,47,48,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-75,-75,-56,71,78,-36,-35,-37,150,151,152,-75,-75,-75,161,165,166,]),'GREATTHAN':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,47,48,52,54,55,56,57,58,95,126,138,139,146,148,150,151,152,156,157,158,],[-10,43,49,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-75,-74,-75,-75,-75,-56,73,74,75,76,77,-36,-35,149,-37,153,154,-75,-75,-75,162,163,164,]),'EQUALS':([41,92,96,97,99,101,103,],[51,113,115,117,119,121,123,]),'PUNTOCOMA':([41,51,60,61,62,63,64,65,66,67,69,70,80,81,82,83,84,85,86,87,88,89,90,92,97,99,101,103,105,106,107,108,109,110,111,114,124,127,129,131,133,135,173,174,175,176,177,178,],[52,-75,52,-62,-63,-75,-75,-75,-75,-75,-71,-72,-75,-75,-75,-75,-75,-75,-65,-66,-67,-68,-69,52,52,52,52,52,-57,-58,-59,-60,-61,-64,-70,52,52,52,52,52,52,52,-34,-38,-42,-46,-50,-54,]),'PLUSPLUS':([51,63,64,65,66,67,68,80,81,82,83,84,85,],[61,61,61,61,61,61,61,61,61,61,61,61,61,]),'MINUSMINUS':([51,63,64,65,66,67,68,80,81,82,83,84,85,],[62,62,62,62,62,62,62,62,62,62,62,62,62,]),'TIMES_ASSIGN':([51,63,64,65,66,67,68,80,81,82,83,84,85,],[63,63,63,63,63,63,63,63,63,63,63,63,63,]),'MINUS_ASSIGN':([51,63,64,65,66,67,68,80,81,82,83,84,85,],[64,64,64,64,64,64,64,64,64,64,64,64,64,]),'PLUS_ASSIGN':([51,63,64,65,66,67,68,80,81,82,83,84,85,],[65,65,65,65,65,65,65,65,65,65,65,65,65,]),'DIVIDE_ASSIGN':([51,63,64,65,66,67,68,80,81,82,83,84,85,],[66,66,66,66,66,66,66,66,66,66,66,66,66,]),'MOD_ASSIGN':([51,63,64,65,66,67,68,80,81,82,83,84,85,],[67,67,67,67,67,67,67,67,67,67,67,67,67,]),'LPAREN':([51,63,64,65,66,67,68,80,81,82,83,84,85,161,162,163,164,165,166,],[68,68,68,68,68,68,68,68,68,68,68,68,68,167,168,169,170,171,172,]),'INTEGER':([51,63,64,65,66,67,68,80,81,82,83,84,85,],[69,69,69,69,69,69,69,69,69,69,69,69,69,]),'PLUS':([51,60,61,62,63,64,65,66,67,68,69,70,80,81,82,83,84,85,86,87,88,89,90,91,105,106,107,108,109,110,111,],[-75,80,-62,-63,-75,-75,-75,-75,-75,-75,-71,-72,-75,-75,-75,-75,-75,-75,80,80,80,80,80,80,-57,-58,-59,-60,80,80,-70,]),'MINUS':([51,60,61,62,63,64,65,66,67,68,69,70,80,81,82,83,84,85,86,87,88,89,90,91,105,106,107,108,109,110,111,],[-75,81,-62,-63,-75,-75,-75,-75,-75,-75,-71,-72,-75,-75,-75,-75,-75,-75,81,81,81,81,81,81,-57,-58,-59,-60,81,81,-70,]),'TIMES':([51,60,61,62,63,64,65,66,67,68,69,70,80,81,82,83,84,85,86,87,88,89,90,91,105,106,107,108,109,110,111,],[-75,82,-62,-63,-75,-75,-75,-75,-75,-75,-71,-72,-75,-75,-75,-75,-75,-75,82,82,82,82,82,82,82,82,-59,-60,82,82,-70,]),'DIVIDE':([51,60,61,62,63,64,65,66,67,68,69,70,80,81,82,83,84,85,86,87,88,89,90,91,105,106,107,108,109,110,111,],[-75,83,-62,-63,-75,-75,-75,-75,-75,-75,-71,-72,-75,-75,-75,-75,-75,-75,83,83,83,83,83,83,83,83,-59,-60,83,83,-70,]),'MOD':([51,60,61,62,63,64,65,66,67,68,69,70,80,81,82,83,84,85,86,87,88,89,90,91,105,106,107,108,109,110,111,],[-75,84,-62,-63,-75,-75,-75,-75,-75,-75,-71,-72,-75,-75,-75,-75,-75,-75,84,84,84,84,84,84,-57,-58,-59,-60,84,84,-70,]),'TIMESTIMES':([51,60,61,62,63,64,65,66,67,68,69,70,80,81,82,83,84,85,86,87,88,89,90,91,105,106,107,108,109,110,111,],[-75,85,-62,-63,-75,-75,-75,-75,-75,-75,-71,-72,-75,-75,-75,-75,-75,-75,85,85,85,85,85,85,-57,-58,-59,-60,85,85,-70,]),'RPAREN':([61,62,63,64,65,66,67,68,69,70,80,81,82,83,84,85,86,87,88,89,90,91,105,106,107,108,109,110,111,167,168,169,170,171,172,],[-62,-63,-75,-75,-75,-75,-75,-75,-71,-72,-75,-75,-75,-75,-75,-75,-65,-66,-67,-68,-69,111,-57,-58,-59,-60,-61,-64,-70,173,174,175,176,177,178,]),'ESPACIO':([72,73,],[94,-73,]),'NEW':([113,115,117,119,121,123,],[125,128,130,132,134,136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration':([0,],[2,]),'listdeclaration':([0,],[3,]),'arraydeclaration':([0,15,43,44,45,46,47,48,49,149,150,151,152,153,154,],[4,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'linkedlistdeclaration':([0,],[5,]),'doublelinkedlistdeclaration':([0,],[6,]),'stackdeclaration':([0,],[7,]),'queuedeclaration':([0,],[8,]),'accessmodif':([0,15,43,44,45,46,47,48,49,149,150,151,152,153,154,],[9,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'empty':([0,9,15,19,43,44,45,46,47,48,49,51,63,64,65,66,67,68,80,81,82,83,84,85,149,150,151,152,153,154,],[14,18,38,18,38,38,38,38,38,38,38,70,70,70,70,70,70,70,70,70,70,70,70,70,38,38,38,38,38,38,]),'finalstatvar':([9,19,],[15,40,]),'Type':([15,43,44,45,46,47,48,49,149,150,151,152,153,154,],[20,53,54,55,56,57,58,59,155,156,157,158,159,160,]),'assign':([20,],[42,]),'lessthandat':([23,],[44,]),'endexpression':([41,60,92,97,99,101,103,114,124,127,129,131,133,135,],[50,79,112,116,118,120,122,126,137,139,141,143,145,147,]),'expression':([51,63,64,65,66,67,68,80,81,82,83,84,85,],[60,86,87,88,89,90,91,105,106,107,108,109,110,]),'greatthandat':([54,],[72,]),'listassign':([71,],[93,]),'arrayassign':([74,],[95,]),'linkedlistassign':([75,],[98,]),'doublelinkedlistassign':([76,],[100,]),'stackassign':([77,],[102,]),'queueassign':([78,],[104,]),'listexpression':([113,],[124,]),'arrayexpression':([115,],[127,]),'linkedlistexpression':([117,],[129,]),'doublelinkedlistexpression':([119,],[131,]),'stackexpression':([121,],[133,]),'queueexpression':([123,],[135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration','program',1,'p_program','Yacc.py',19),
  ('program -> listdeclaration','program',1,'p_program','Yacc.py',20),
  ('program -> arraydeclaration','program',1,'p_program','Yacc.py',21),
  ('program -> linkedlistdeclaration','program',1,'p_program','Yacc.py',22),
  ('program -> doublelinkedlistdeclaration','program',1,'p_program','Yacc.py',23),
  ('program -> stackdeclaration','program',1,'p_program','Yacc.py',24),
  ('program -> queuedeclaration','program',1,'p_program','Yacc.py',25),
  ('Type -> INT','Type',1,'p_Type','Yacc.py',30),
  ('Type -> BOOLEAN','Type',1,'p_Type','Yacc.py',31),
  ('Type -> STRING','Type',1,'p_Type','Yacc.py',32),
  ('Type -> SHORT','Type',1,'p_Type','Yacc.py',33),
  ('Type -> FLOAT','Type',1,'p_Type','Yacc.py',34),
  ('Type -> LONG','Type',1,'p_Type','Yacc.py',35),
  ('Type -> DOUBLE','Type',1,'p_Type','Yacc.py',36),
  ('Type -> CHAR','Type',1,'p_Type','Yacc.py',37),
  ('Type -> BYTE','Type',1,'p_Type','Yacc.py',38),
  ('Type -> OBJECT','Type',1,'p_Type','Yacc.py',39),
  ('Type -> arraydeclaration','Type',1,'p_Type','Yacc.py',40),
  ('Type -> empty','Type',1,'p_Type','Yacc.py',41),
  ('accessmodif -> PUBLIC','accessmodif',1,'p_accessmodif','Yacc.py',46),
  ('accessmodif -> PRIVATE','accessmodif',1,'p_accessmodif','Yacc.py',47),
  ('accessmodif -> PROTECTED','accessmodif',1,'p_accessmodif','Yacc.py',48),
  ('accessmodif -> DEFAULT','accessmodif',1,'p_accessmodif','Yacc.py',49),
  ('accessmodif -> empty','accessmodif',1,'p_accessmodif','Yacc.py',50),
  ('finalstatvar -> FINAL','finalstatvar',1,'p_finalstatvar','Yacc.py',54),
  ('finalstatvar -> STATIC','finalstatvar',1,'p_finalstatvar','Yacc.py',55),
  ('finalstatvar -> FINAL STATIC','finalstatvar',2,'p_finalstatvar','Yacc.py',56),
  ('finalstatvar -> empty','finalstatvar',1,'p_finalstatvar','Yacc.py',57),
  ('declaration -> accessmodif finalstatvar Type STRING endexpression','declaration',5,'p_declaration','Yacc.py',61),
  ('declaration -> accessmodif finalstatvar Type assign','declaration',4,'p_declaration','Yacc.py',62),
  ('listdeclaration -> accessmodif finalstatvar LIST GREATTHAN Type LESSTHAN STRING endexpression','listdeclaration',8,'p_listdeclaration','Yacc.py',67),
  ('listdeclaration -> accessmodif finalstatvar LIST GREATTHAN Type LESSTHAN listassign','listdeclaration',7,'p_listdeclaration','Yacc.py',68),
  ('listassign -> STRING EQUALS listexpression endexpression','listassign',4,'p_listassign','Yacc.py',73),
  ('listexpression -> NEW LIST GREATTHAN Type LESSTHAN LPAREN RPAREN','listexpression',7,'p_listexpression','Yacc.py',77),
  ('arraydeclaration -> accessmodif finalstatvar ARRAYLIST lessthandat Type greatthandat ESPACIO STRING endexpression','arraydeclaration',9,'p_arraydeclaration','Yacc.py',82),
  ('arraydeclaration -> accessmodif finalstatvar ARRAYLIST LESSTHAN Type GREATTHAN arrayassign','arraydeclaration',7,'p_arraydeclaration','Yacc.py',83),
  ('arrayassign -> STRING EQUALS arrayexpression endexpression','arrayassign',4,'p_arrayassign','Yacc.py',88),
  ('arrayexpression -> NEW ARRAYLIST LESSTHAN Type GREATTHAN LPAREN RPAREN','arrayexpression',7,'p_arrayexpression','Yacc.py',92),
  ('linkedlistdeclaration -> accessmodif finalstatvar LINKEDLIST LESSTHAN Type GREATTHAN STRING endexpression','linkedlistdeclaration',8,'p_linkedlistdeclaration','Yacc.py',97),
  ('linkedlistdeclaration -> accessmodif finalstatvar LINKEDLIST LESSTHAN Type GREATTHAN linkedlistassign','linkedlistdeclaration',7,'p_linkedlistdeclaration','Yacc.py',98),
  ('linkedlistassign -> STRING EQUALS linkedlistexpression endexpression','linkedlistassign',4,'p_linkedlistassign','Yacc.py',103),
  ('linkedlistexpression -> NEW LINKEDLIST LESSTHAN Type GREATTHAN LPAREN RPAREN','linkedlistexpression',7,'p_linkedlistexpression','Yacc.py',107),
  ('doublelinkedlistdeclaration -> accessmodif finalstatvar DOUBLELINKEDLIST LESSTHAN Type GREATTHAN STRING endexpression','doublelinkedlistdeclaration',8,'p_doublelinkedlistdeclaration','Yacc.py',112),
  ('doublelinkedlistdeclaration -> accessmodif finalstatvar DOUBLELINKEDLIST LESSTHAN Type GREATTHAN doublelinkedlistassign','doublelinkedlistdeclaration',7,'p_doublelinkedlistdeclaration','Yacc.py',113),
  ('doublelinkedlistassign -> STRING EQUALS doublelinkedlistexpression endexpression','doublelinkedlistassign',4,'p_doublelinkedlistassign','Yacc.py',118),
  ('doublelinkedlistexpression -> NEW DOUBLELINKEDLIST LESSTHAN Type GREATTHAN LPAREN RPAREN','doublelinkedlistexpression',7,'p_doublelinkedlistexpression','Yacc.py',122),
  ('stackdeclaration -> accessmodif finalstatvar STACK LESSTHAN Type GREATTHAN STRING endexpression','stackdeclaration',8,'p_stackdeclaration','Yacc.py',127),
  ('stackdeclaration -> accessmodif finalstatvar STACK LESSTHAN Type GREATTHAN stackassign','stackdeclaration',7,'p_stackdeclaration','Yacc.py',128),
  ('stackassign -> STRING EQUALS stackexpression endexpression','stackassign',4,'p_stackassign','Yacc.py',133),
  ('stackexpression -> NEW STACK GREATTHAN Type LESSTHAN LPAREN RPAREN','stackexpression',7,'p_stackexpression','Yacc.py',137),
  ('queuedeclaration -> accessmodif finalstatvar QUEUE GREATTHAN Type LESSTHAN STRING endexpression','queuedeclaration',8,'p_queuedeclaration','Yacc.py',142),
  ('queuedeclaration -> accessmodif finalstatvar QUEUE GREATTHAN Type LESSTHAN queueassign','queuedeclaration',7,'p_queuedeclaration','Yacc.py',143),
  ('queueassign -> STRING EQUALS queueexpression endexpression','queueassign',4,'p_queueassign','Yacc.py',148),
  ('queueexpression -> NEW QUEUE GREATTHAN Type LESSTHAN LPAREN RPAREN','queueexpression',7,'p_queueexpression','Yacc.py',152),
  ('assign -> STRING EQUALS expression endexpression','assign',4,'p_assign','Yacc.py',157),
  ('endexpression -> PUNTOCOMA','endexpression',1,'p_endexpression','Yacc.py',161),
  ('expression -> expression PLUS expression','expression',3,'p_expression','Yacc.py',165),
  ('expression -> expression MINUS expression','expression',3,'p_expression','Yacc.py',166),
  ('expression -> expression TIMES expression','expression',3,'p_expression','Yacc.py',167),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','Yacc.py',168),
  ('expression -> expression MOD expression','expression',3,'p_expression','Yacc.py',169),
  ('expression -> PLUSPLUS','expression',1,'p_expression','Yacc.py',170),
  ('expression -> MINUSMINUS','expression',1,'p_expression','Yacc.py',171),
  ('expression -> expression TIMESTIMES expression','expression',3,'p_expression','Yacc.py',172),
  ('expression -> TIMES_ASSIGN expression','expression',2,'p_expression','Yacc.py',173),
  ('expression -> MINUS_ASSIGN expression','expression',2,'p_expression','Yacc.py',174),
  ('expression -> PLUS_ASSIGN expression','expression',2,'p_expression','Yacc.py',175),
  ('expression -> DIVIDE_ASSIGN expression','expression',2,'p_expression','Yacc.py',176),
  ('expression -> MOD_ASSIGN expression','expression',2,'p_expression','Yacc.py',177),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','Yacc.py',178),
  ('expression -> INTEGER','expression',1,'p_expression','Yacc.py',179),
  ('expression -> empty','expression',1,'p_expression','Yacc.py',180),
  ('greatthandat -> GREATTHAN','greatthandat',1,'p_greatthandat','Yacc.py',210),
  ('lessthandat -> LESSTHAN','lessthandat',1,'p_lessthandat','Yacc.py',215),
  ('empty -> <empty>','empty',0,'p_empty','Yacc.py',220),
]
